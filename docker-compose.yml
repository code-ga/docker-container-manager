services:
  # PostgreSQL Database
  db:
    image: postgres
    container_name: lormas-db
    restart: unless-stopped
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/drizzle:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $POSTGRES_USER -d $POSTGRES_DB"]
      interval: 1m30s
      timeout: 30s
      retries: 5
      start_period: 30s
    env_file:
      - .env

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: lormas-backend
    restart: unless-stopped
    ports:
      - "3000:3000"
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - .env
    environment:
      - NODE_ENV=production
    # volumes:
    #   - ./backend:/usr/src/app
    #   - /usr/src/app/node_modules
    # develop:
    #   watch:
    #     - path: ./backend/src
    #       action: rebuild
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s

  # Nginx Reverse Proxy (now serves frontend static files)
  nginx:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: lormas-nginx
    restart: unless-stopped
    ports:
      - "8080:80"
    volumes:
      - ./nginx:/etc/nginx/conf.d
    depends_on:
      backend:
        condition: service_healthy
    healthcheck:
      test:
        [
          "CMD",
          "wget",
          "--no-verbose",
          "--tries=1",
          "--spider",
          "http://localhost/",
        ]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:
    driver: local

networks:
  default:
    name: lormas-network
    driver: bridge
